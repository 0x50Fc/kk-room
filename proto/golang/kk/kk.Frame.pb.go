// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kk.Frame.proto

/*
Package kk is a generated protocol buffer package.

It is generated from these files:
	kk.Frame.proto
	kk.Message.proto

It has these top-level messages:
	Frame
	Message
*/
package kk

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Frame struct {
	// *
	// 帧时间
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	// *
	// 帧类型
	Type int32 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	// *
	// 帧数据
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Frame) Reset()                    { *m = Frame{} }
func (m *Frame) String() string            { return proto.CompactTextString(m) }
func (*Frame) ProtoMessage()               {}
func (*Frame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Frame) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Frame) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Frame) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Frame)(nil), "kk.Frame")
}

func init() { proto.RegisterFile("kk.Frame.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 108 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0xce, 0xd6, 0x73,
	0x2b, 0x4a, 0xcc, 0x4d, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xca, 0xce, 0x56, 0xf2,
	0xe5, 0x62, 0x05, 0x0b, 0x09, 0xc9, 0x70, 0x71, 0x96, 0x64, 0xe6, 0xa6, 0x16, 0x97, 0x24, 0xe6,
	0x16, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x30, 0x07, 0x21, 0x04, 0x84, 0x84, 0xb8, 0x58, 0x4a, 0x2a,
	0x0b, 0x52, 0x25, 0x98, 0x14, 0x18, 0x35, 0x58, 0x83, 0xc0, 0x6c, 0x90, 0x58, 0x4a, 0x62, 0x49,
	0xa2, 0x04, 0xb3, 0x02, 0xa3, 0x06, 0x4f, 0x10, 0x98, 0x9d, 0xc4, 0x06, 0x36, 0xd9, 0x18, 0x10,
	0x00, 0x00, 0xff, 0xff, 0xff, 0x83, 0x6e, 0xda, 0x6b, 0x00, 0x00, 0x00,
}
