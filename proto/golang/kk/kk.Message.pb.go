// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kk.Message.proto

/*
Package kk is a generated protocol buffer package.

It is generated from these files:
	kk.Message.proto

It has these top-level messages:
	Message
*/
package kk

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message_Type int32

const (
	Message_PING Message_Type = 0
	Message_PONG Message_Type = 1
)

var Message_Type_name = map[int32]string{
	0: "PING",
	1: "PONG",
}
var Message_Type_value = map[string]int32{
	"PING": 0,
	"PONG": 1,
}

func (x Message_Type) String() string {
	return proto.EnumName(Message_Type_name, int32(x))
}
func (Message_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Message struct {
	// *
	// 消息类型
	Type Message_Type `protobuf:"varint,1,opt,name=type,enum=kk.Message_Type" json:"type,omitempty"`
	// *
	// 房间ID
	RoomId int64 `protobuf:"varint,2,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
	// *
	// 客户端请求时间
	// @type {int64}
	Atime int64 `protobuf:"varint,3,opt,name=atime" json:"atime,omitempty"`
	// *
	// 到达服务端时间
	// @type {int64}
	Dtime int64 `protobuf:"varint,4,opt,name=dtime" json:"dtime,omitempty"`
	// *
	// 时间戳
	// @type {int64}
	Timestamp int64 `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
	// *
	// 数据
	// @type {bytes}
	Data []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message) GetType() Message_Type {
	if m != nil {
		return m.Type
	}
	return Message_PING
}

func (m *Message) GetRoomId() int64 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *Message) GetAtime() int64 {
	if m != nil {
		return m.Atime
	}
	return 0
}

func (m *Message) GetDtime() int64 {
	if m != nil {
		return m.Dtime
	}
	return 0
}

func (m *Message) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Message) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "kk.Message")
	proto.RegisterEnum("kk.Message_Type", Message_Type_name, Message_Type_value)
}

func init() { proto.RegisterFile("kk.Message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 187 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc8, 0xce, 0xd6, 0xf3,
	0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xca, 0xce,
	0x56, 0x3a, 0xc4, 0xc8, 0xc5, 0x0e, 0x15, 0x15, 0x52, 0xe1, 0x62, 0x29, 0xa9, 0x2c, 0x48, 0x95,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x33, 0x12, 0xd0, 0x43, 0xd2, 0x10, 0x52, 0x59, 0x90, 0x1a, 0x04,
	0x96, 0x15, 0x12, 0xe7, 0x62, 0x2f, 0xca, 0xcf, 0xcf, 0x8d, 0xcf, 0x4c, 0x91, 0x60, 0x52, 0x60,
	0xd4, 0x60, 0x0e, 0x62, 0x03, 0x71, 0x3d, 0x53, 0x84, 0x44, 0xb8, 0x58, 0x13, 0x4b, 0x32, 0x73,
	0x53, 0x25, 0x98, 0xc1, 0xc2, 0x10, 0x0e, 0x48, 0x34, 0x05, 0x2c, 0xca, 0x02, 0x11, 0x05, 0x73,
	0x84, 0x64, 0xb8, 0x38, 0x41, 0x74, 0x71, 0x49, 0x62, 0x6e, 0x81, 0x04, 0x2b, 0x58, 0x06, 0x21,
	0x20, 0x24, 0xc4, 0xc5, 0x92, 0x92, 0x58, 0x92, 0x28, 0xc1, 0xa6, 0xc0, 0xa8, 0xc1, 0x13, 0x04,
	0x66, 0x2b, 0x49, 0x71, 0xb1, 0x80, 0x1c, 0x21, 0xc4, 0xc1, 0xc5, 0x12, 0xe0, 0xe9, 0xe7, 0x2e,
	0xc0, 0x00, 0x66, 0xf9, 0xfb, 0xb9, 0x0b, 0x30, 0x26, 0xb1, 0x81, 0xfd, 0x63, 0x0c, 0x08, 0x00,
	0x00, 0xff, 0xff, 0x4e, 0x9c, 0xaf, 0x0b, 0xe3, 0x00, 0x00, 0x00,
}
